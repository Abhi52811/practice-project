name: Deployment Exercise

on: 
  push:
    branches:
      - master
      - dev

env:
  MONGO_DB_NAME: gha-demo

jobs:
  lint:
    runs-on: ubuntu-latest
    steps: 
      - name: Get code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

  test:
    needs: lint
    runs-on: ubuntu-latest
    steps: 
      - name: Get code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Run tests and generate report
        id: run-test
        continue-on-error: true
        run: |
          mkdir -p reports
          jest --json --outputFile=reports/test.json

      - name: Upload test report if failed
        if: steps.run-test.outcome == 'failure'
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: reports/test.json

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: deps-node-modules-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Build website
        run: npm run build

      - name: Publish JS filename
        id: publish
        run: |
          FILE=$(find dist/assets -name "*.js" | head -n 1)
          echo "script-file=$FILE" >> $GITHUB_OUTPUT

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files

      - name: Output contents
        run: ls -R

      - name: Output filename
        run: echo '${{ needs.build.outputs.script-file }}'

      - name: Deploy code
        run: echo "Deploying..."

  report:
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Output failure information
        run: |
          echo "Something went wrong"
          echo "${{ toJson(github) }}"
